import 'package:flutter/material.dart';

class DenseInputDecoration extends InputDecoration {
  const DenseInputDecoration({
    Widget icon,
    String labelText,
    TextStyle labelStyle,
    String helperText,
    TextStyle helperStyle,
    int helperMaxLines,
    String hintText,
    TextStyle hintStyle,
    int hintMaxLines,
    String errorText,
    TextStyle errorStyle,
    int errorMaxLines,
    FloatingLabelBehavior floatingLabelBehavior = FloatingLabelBehavior.auto,
    bool isDense,
    EdgeInsetsGeometry contentPadding,
    Widget prefixIcon,
    Widget prefix,
    String prefixText,
    TextStyle prefixStyle,
    Widget suffixIcon,
    Widget suffix,
    String suffixText,
    TextStyle suffixStyle,
    Widget counter,
    String counterText,
    TextStyle counterStyle,
    bool filled,
    Color fillColor,
    Color focusColor,
    Color hoverColor,
    InputBorder errorBorder,
    InputBorder focusedBorder,
    InputBorder focusedErrorBorder,
    InputBorder disabledBorder,
    InputBorder enabledBorder,
    InputBorder border,
    bool enabled = true,
    String semanticCounterText,
    bool alignLabelWithHint,
  }) : super(
            icon: icon,
            labelText: labelText,
            helperText: helperText,
            labelStyle: labelStyle,
            helperStyle: helperStyle,
            helperMaxLines: helperMaxLines,
            hintText: hintText,
            hintStyle: hintStyle,
            hintMaxLines: hintMaxLines,
            errorText: errorText,
            errorStyle: errorStyle,
            errorMaxLines: errorMaxLines,
            floatingLabelBehavior: floatingLabelBehavior,
            isDense: isDense ?? true,
            contentPadding: contentPadding,
            prefixIcon: prefixIcon,
            prefixIconConstraints: const BoxConstraints(
              minWidth: 32,
              minHeight: 32,
            ),
            suffixIconConstraints: const BoxConstraints(
              minWidth: 32,
              minHeight: 32,
            ),
            prefix: prefix,
            prefixText: prefixText,
            prefixStyle: prefixStyle,
            suffixIcon: suffixIcon,
            suffix: suffix,
            suffixText: suffixText,
            suffixStyle: suffixStyle,
            counterText: counterText,
            counter: counter,
            counterStyle: counterStyle,
            filled: filled,
            fillColor: fillColor,
            focusColor: focusColor,
            hoverColor: hoverColor,
            errorBorder: errorBorder,
            focusedBorder: focusedBorder,
            focusedErrorBorder: focusedErrorBorder,
            disabledBorder: disabledBorder,
            enabledBorder: enabledBorder,
            border: border,
            enabled: enabled,
            semanticCounterText: semanticCounterText,
            alignLabelWithHint: alignLabelWithHint);
}
